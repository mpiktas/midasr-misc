\documentclass[nojss]{jss}
\usepackage{amsmath,amssymb}
\usepackage{bm}
\usepackage{multirow}
\usepackage{dcolumn}


\newcommand{\specialcell}[2][c]{%
  \begin{tabular}[#1]{@{}c@{}}#2\end{tabular}}
\DeclareMathOperator{\argmin}{argmin}

\author{Virmantas Kvedaras\\Vilnius University \And Vaidotas
  Zemlys\\Vilnius University}
\Plainauthor{Virmantas Kvedaras, Vaidotas Zemlys}

\title{Mixed Frequency Data Sampling Regression Models: the \proglang{R}
    Package \pkg{midasr}}
\Plaintitle{Mixed Frequency Data Sampling Regression Models: the R Package midasr}
\Shorttitle{R package \pkg{midasr}}

\Abstract{
  The implementation of MIDAS approach in the \proglang{R} package \pkg{midasr} is described.
}
\Keywords{MIDAS, specification test}
\Plainkeywords{MIDAS, specification test}
\Address{
  Vaidotas Zemlys\\
  Department of Econometric Analysis\\
  Faculty of Mathematics and Informatics\\
  Vilnius University\\
  Naugarduko g. 24, Vilnius, Lithuania\\
  E-mail:\email{Vaidotas.Zemlys@mif.vu.lt}\\
  URL: \url{http://vzemlys.wordpress.com}
}


%% need no \usepackage{Sweave.sty}

\begin{document}

\section{Introduction}

In econometric applications it is common to encounter time series
which are sampled in different frequencies, e.g. quarterly vs yearly,
etc. In order to use differently sampled series in regression analysis
one of the series is usually aggregated. It is evident that some of
the information is lost during such transformation. One of the
solutions to this problem is the mixed data sampling (MIDAS) approach introduced in
\cite{ghysels_touch_2002}. It has gained popularity in financial and some
macroeconomic applications (see e.g. \citealp{foroni:2012}, and
\citealp{sinko:2012}, for a recent overview of various
contributions). In the most cases, it is used for the forecasting purposes.

The main idea of MIDAS approach is based on observation that
aggregation of high frequency time series is actualy a specific
embedding of the high frequency domain to the low frequency
domain. Say we have yearly series $Y_t$ and quaterly series
$x_{\tau}$ and we want to estimate the model
\begin{align*}
  Y_{t}=f(x_{\tau})+\varepsilon_t
\end{align*}
The usual approach is to aggregate $x_{\tau}$ to a yearly sampling frequency:
\begin{align*}
  X_{t}=\frac{1}{4}(x_{4t}+x_{4t-1}+x_{4t-2}+x_{4t-3}),
\end{align*}
where we assume that yearly time series are observed at the same time
as the fourth quarter of the quarterly time series. Then we can
rewrite the model in the following form:
\begin{align*}
  Y_t=\alpha+\beta X_t+\varepsilon_t
\end{align*}
If we substitute the aggregation equation we see that this model is a
restricted form of the more general model:
\begin{align*}
  Y_t=\alpha+w_1x_{4t}+w_2x_{4t-1}+w_3x_{x4t-2}+w_4x_{4t-3}+\varepsilon_t
\end{align*}
We can extend this model for general frequency ratio $m$ and including
more lags resulting in so called U-MIDAS model:
\begin{align*}
  Y_t=\alpha+\sum_{h=0}^kw_hx_{tm-h}+\varepsilon_t.
\end{align*}
If frequency ratio $m$ is high, such
model might not be feasible to estimate, due to lack of degrees of
freedom. To solve this problem MIDAS approach suggests restricting the weights:
\begin{align*}
  w_h=g(h,\lambda), \quad, h=0,1,...,k
\end{align*}
where $g$ is some function and $\lambda$ is a vector of
hyper-parameters. In MIDAS literature function $g$ is usually chosen from
a fixed set of functions. The important question is then whether this
chosen function is the correct one. Recently Kvedaras and Zemlys
\cite{kz:2012} proposed a test which lets to test hypothesis whether the chosen weight function is appropriate.

Package \pkg{midasr} is aimed at applied researcher. It allows to
estimate the MIDAS regression model and test its feasibility.


\section{Theory}

\subsection{Simple MIDAS model}

Consider a situation where we observe processes $y=\{y_t\in
\mathbb{R}, \ t=0,\pm 1,\pm 2\dots\}$  and $\bm{z}=\{\bm{z}_t\in {\mathbb R^\ell}, \ \ell\in\mathbb{N}, \ t=0,\pm 1,\pm 2\dots\}$ are observed at a low frequency, whereas $x=\{x_\tau\in {\mathbb R}, \ \tau=0, \pm 1, \pm2 \dots\}$ is observed at a higher frequency with $m$ high-frequency observations available per each single low frequency period $t$.

The MIDAS regression of $y$ on $\bm{z}$ and $x$, assuming that $x$ makes an
influence up to $k$ high-frequency lags, has the following representation
\begin{align} \label{eq:1}
  y_t=\sum_{h=0}^{k}w_hx_{tm-h}+\bm{z}_t'\bm{\gamma}+\varepsilon_t, 
\end{align}
where the coefficients $w_h$ are usually constrained by a functional constraint:
\begin{align}\label{eq:weights}
  w_h=g(\bm{\lambda},h), h=0,...,k
\end{align}
where $\bm{\lambda}$ is a vector of hyper-parameters.

\subsection{Estimation}

For the unrestricted model the coefficients $\beta_j$ and $\gamma$ can
be estimated using OLS. For the restricted model, where weights depend
on hyper-parameters we estimate the model parameters by non-linear
least squares:
\begin{align}\label{e:nls}
  (\hat{\bm{\gamma}},\hat{\bm{\lambda}})=\argmin\sum_{t=[k/m]+1}^{n}\left(y_t-\sum_{h=0}^{k}g(\bm{\lambda},h)x_{tm-h}-\bm{z}_t'\bm{\gamma}\right)^2.
\end{align}

Suppose that $\varepsilon_t$ are i.i.d and independent of
$x_t$ and $\bm{z}_t$. Suppose next that $x$ and $\bm{z}$ are
stationary and ergodic or deterministic with usual regularity
conditions. Suppose that $g$ is twice-differentiable continuous
function with respect to $\bm{\lambda}$. Then the estimates are
consistent and assymptotically normal.

\section{Testing}

It is of interest to test whether the restriction \eqref{eq:weights}
holds. Kvedaras and Zemlys \cite{kz:2012} have developed the test
based on the difference between the estimates of weights of restricted
model and the estimates of weights of unrestricted model. Denote by
$\hat{\bm{\theta}}'=(\hat{\bm{w}}',\hat{\bm{\gamma}}')$ the OLS estimates
of the model \eqref{eq:1} and by
$\hat{\bm{f}}'=(g(\hat{\bm{\lambda}},0),...,g(\hat{\bm{\lambda}},k),\hat{\bm{\gamma}}')$. Then
under null hypothesis that $w_h=g(\bm{\lambda})$: 
\begin{align*}
  (\bm{\hat{\theta}}'-\hat{\bm{f}})\bm{A}(\bm{\hat{\theta}}-\bm{f})\sim \chi^2(k-r),
\end{align*}
where $\bm{A}$ is suitable normalisation matrix and $r$ is the dimension of
the vector $\bm{\lambda}$.


\section[Implementation in midasr package]{Implementation in \pkg{midasr} package}

Since estimation of MIDAS model is a NLS problem, it is possible
to estimate it using existing \proglang{R} functions, such as
\code{nls} for example. There are however several challenges related
to using existing \proglang{R} code: 
\begin{itemize}
\item The data in the model cannot be in one \code{data.frame}, since
  the time series of different frequency are of different lengths. 
\item MIDAS model requires special transformation of the high
  frequency time series:  
  \begin{align}\label{def:embed}
    \begin{bmatrix}
      x_1\\
      \vdots\\
      x_{Nm}
    \end{bmatrix}
    \to
    \begin{bmatrix}
      x_{lm} & x_{lm-1} & \dots & x_{lm-k}  \\
      x_{(l+1)m} & x_{(l+1m)-1}& \dots & x_{(l+1)m-k}\\
      \hdotsfor{4}\\
      x_{Nm} & x_{Nm-1} & \dots & x_{Nm-k }
    \end{bmatrix}
  \end{align}  
  where $N$ is the low-frequency sample size and $k$ is the
  high-frequency lag. There is no existing \proglang{R} function which
  performs such operation.
\end{itemize}
The package \pkg{midasr} gives a solution to these challenges. It lets
applied researcher to specify the MIDAS model using familiar
\code{formula} interface making the estimation of MIDAS models similar
to other existing regression models.

 

\subsection{Embedding of high-frequency time series }

High frequency time series are embedded to low-frequency with \code{fmls}
function. This function takes as an arguments the high-frequency time
series, the number of high-frequency lags and the frequency ratio and
performs the transformation \eqref{def:embed}: 
<<<echo=TRUE,results=verbatim>>=
library(midasr)
x <- 1:16
fmls(x,3,4)
@ 
It is assumed that for each low-frequency observation there are
exactly $m$ high-frequency observations. This means that the frequency
ratio must divide the length of
the time series passed to \code{fmls}. The result of this division is
the number of rows of the resulting matrix. 

If $m=1$ this function behaves
exactly as function \code{embed}, with exception that it padds the
resulting matrix with \code{NA}'s
<<echo=TRUE,results=verbatim>>=
x <- 1:4
fmls(x,2,1)
embed(x,3)
@

\subsection{Estimation of unrestricted MIDAS model}


Recall that unrestricted MIDAS model can be estimated with OLS. Function
\code{fmls} enables to 
use existing \proglang{R} function \code{lm} for estimating linear models.
For illustration purposes we use data from the Okun's law example
analyzed in \cite{kz:2012} and \cite{kvedaras_regression_2010}. 
MIDAS model is then
\begin{align*}
  \Delta \log Y_t = \alpha_0 + \alpha_1 t + \sum_{h=0}^kw_h\Delta U_{tm-h}\varepsilon_t,
\end{align*}
where $Y$ and $U$ denote real GDP and unemployment rate of US, and
$\Delta$ is the difference operator.

<<echo=TRUE,results=verbatim>>=
data("USrealgdp")
data("USunempr")
y <- diff(log(USrealgdp))
x <- window(diff(USunempr), start = 1949)
trend <- 1:length(y)
lm(y~trend+fmls(x,11,12))
@ %def 

As we see there is no problem of passing different length time series
to \code{lm}. \proglang{R} simply picks the data from the environment
it is called from. Sometimes it is necessary to specify data
directly. This is possible by using \code{midas_u} function:

<<echo=TRUE,results=verbatim>>=
ldata <- data.frame(y=y,trend=trend) 
hdata <- data.frame(x=x)
midas_u(y~trend+fmls(x,11,12),ldata,hdata)
@ %def 

As we see \code{lm} object is returned, so it is possible to do
everything what can be done with usual \code{lm} object.

\subsection{Estimation of restricted MIDAS model}
The restricted model requires that weights are specified. This is done
by passing the weight function as an additional argument for
\code{fmls} in MIDAS model specification.

<<echo=TRUE, results=verbatim>>=
midas_r(y~fmls(x,11,12,nealmon),start=list(x=c(0,0,0)))
@

Here we estimate MIDAS model with normalized exponential Almon lag
weights. Since we use optimisation, we need to specify starting values.


\bibliography{midas}

\end{document}

